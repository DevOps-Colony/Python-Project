name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: flask-auth-app
  HELM_CHART_PATH: ./helm/python-app
  SONAR_PROJECT_KEY: DevOps-Colony_Python-Project
  SONAR_ORGANIZATION: DevOps-Colony
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/flask-auth-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Run Unit Tests
      run: python -m unittest discover -s tests
      env:
        FLASK_ENV: test

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        projectKey: ${{ env.SONAR_PROJECT_KEY }}
        organization: ${{ env.SONAR_ORGANIZATION }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Authenticate Docker to AWS ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${AWS_REGION}.amazonaws.com

    - name: Build Docker Image
      run: |
        docker build -t $DOCKER_IMAGE:latest .

    - name: Trivy Vulnerability Scan (Local Image)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.DOCKER_IMAGE }}:latest'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'

    - name: Push Docker Image to Docker Hub
      run: |
        echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
        docker push $DOCKER_IMAGE:latest

    - name: Deploy Infrastructure with Terraform
      run: |
        chmod +x .github/scripts/deploy-infrastructure.sh
        ./.github/scripts/deploy-infrastructure.sh
      env:
        TF_VAR_environment: staging

    - name: Deploy Helm Chart to EKS
      run: |
        chmod +x .github/scripts/deploy-helm.sh
        ./.github/scripts/deploy-helm.sh
