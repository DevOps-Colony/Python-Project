name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: us-west-2
  AWS_DEFAULT_REGION: us-west-2
  ECR_REPOSITORY: flask-auth-app
  HELM_CHART_PATH: ./helm/python-app
  SONAR_PROJECT_KEY: DevOps-Colony_Python-Project
  SONAR_ORGANIZATION: DevOps-Colony
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/flask-auth-app

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run Unit Tests
        run: pytest tests/
        env:
          PYTHONPATH: ./backend

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ env.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ env.SONAR_ORGANIZATION }}

      - name: Build Docker Image
        run: docker build -t ${{ env.DOCKER_IMAGE }} .

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push Docker Image to DockerHub
        run: docker push ${{ env.DOCKER_IMAGE }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Infrastructure with Terraform
        run: |
          terraform -chdir=terraform/dev init -backend-config=../backend-config/dev.backend
          terraform -chdir=terraform/dev apply -auto-approve

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.28.0

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region $AWS_REGION --name flask-auth-cluster-dev

      - name: Deploy to EKS via Helm
        run: |
          helm upgrade --install flask-auth ${{ env.HELM_CHART_PATH }} \
            --namespace default \
            --set image.repository=${{ env.DOCKER_IMAGE }} \
            --set image.tag=latest
